import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as d,d as e,a as l,o as t}from"./app-C_IVUJ4N.js";const i={},p=e("blockquote",null,[e("p",null,"来自 gpt 的摘要： 这篇文章系统介绍了Linux操作系统中与目录、文件、用户管理、系统状态和网络通信相关的常用命令及其用法。内容涵盖目录切换与操作、文件的创建、查看、修改与删除，以及文件压缩与传输。文章还涉及权限管理、用户和用户组的增删改、服务管理及进程控制。同时，它讲解了系统资源监控、内存与磁盘使用查看、网络连接测试等实用工具。整体内容侧重于命令的功能说明与实际示例，适用于初学者熟悉Linux日常操作和管理任务。")],-1),r=l('<h2 id="目录切换" tabindex="-1"><a class="header-anchor" href="#目录切换"><span>目录切换</span></a></h2><ul><li><p><code>cd usr</code>：切换到该目录下 usr 目录</p></li><li><p><code>cd ..（或cd../）</code>：切换到上一层目录</p></li><li><p><code>cd /</code>：切换到系统根目录</p></li><li><p><code>cd ~</code>：切换到用户主目录</p></li><li><p><strong><code>cd -</code>：</strong> 切换到上一个操作所在目录</p></li></ul><h2 id="目录操作" tabindex="-1"><a class="header-anchor" href="#目录操作"><span>目录操作</span></a></h2><ul><li><p><code>ls</code>：显示目录中的文件和子目录的列表。例如：<code>ls /home</code>，显示 <code>/home</code> 目录下的文件和子目录列表。</p></li><li><p><code>ll</code>：<code>ll</code> 是 <code>ls -l</code> 的别名，ll 命令可以看到该目录下的所有目录和文件的详细信息</p></li><li><p><code>mkdir [选项] 目录名</code>：创建新目录（增）。例如：<code>mkdir -m 755 my_directory</code>，创建一个名为 <code>my_directory</code> 的新目录，并将其权限设置为 755，即所有用户对该目录有读、写和执行的权限。</p></li><li><p><code>find [路径] [表达式]</code>：在指定目录及其子目录中搜索文件或目录（查），非常强大灵活。例如：① 列出当前目录及子目录下所有文件和文件夹: <code>find .</code>；② 在<code>/home</code>目录下查找以 <code>.txt</code> 结尾的文件名:<code>find /home -name &quot;*.txt&quot;</code> ,忽略大小写: <code>find /home -i name &quot;*.txt&quot;</code> ；③ 当前目录及子目录下查找所有以 <code>.txt</code> 和 <code>.pdf</code> 结尾的文件:<code>find . \\( -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot; \\)</code>或<code>find . -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot;</code>。</p></li><li><p><code>pwd</code>：显示当前工作目录的路径。</p></li><li><p><code>rmdir [选项] 目录名</code>：删除空目录（删）。例如：<code>rmdir -p my_directory</code>，删除名为 <code>my_directory</code> 的空目录，并且会递归删除<code>my_directory</code>的空父目录，直到遇到非空目录或根目录。</p></li><li><p><code>rm [选项] 文件或目录名</code>：删除文件/目录（删）。例如：<code>rm -r my_directory</code>，删除名为 <code>my_directory</code> 的目录，<code>-r</code>(recursive,递归) 表示会递归删除指定目录及其所有子目录和文件。</p></li><li><p><code>cp [选项] 源文件/目录 目标文件/目录</code>：复制文件或目录（移）。例如：<code>cp file.txt /home/file.txt</code>，将 <code>file.txt</code> 文件复制到 <code>/home</code> 目录下，并重命名为 <code>file.txt</code>。<code>cp -r source destination</code>，将 <code>source</code> 目录及其下的所有子目录和文件复制到 <code>destination</code> 目录下，并保留源文件的属性和目录结构。</p></li><li><p><code>mv [选项] 源文件/目录 目标文件/目录</code>：移动文件或目录（移），也可以用于重命名文件或目录。例如：<code>mv file.txt /home/file.txt</code>，将 <code>file.txt</code> 文件移动到 <code>/home</code> 目录下，并重命名为 <code>file.txt</code>。<code>mv</code> 与 <code>cp</code> 的结果不同，<code>mv</code> 好像文件“搬家”，文件个数并未增加。而 <code>cp</code> 对文件进行复制，文件个数增加了。</p></li></ul><h2 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作"><span>文件操作</span></a></h2><ul><li><p><code>touch [选项] 文件名..</code>：创建新文件或更新已存在文件（增）。例如：<code>touch file1.txt file2.txt file3.txt</code> ，创建 3 个文件。</p></li><li><p><code>ln [选项] &lt;源文件&gt; &lt;硬链接/软链接文件&gt;</code>：创建硬链接/软链接。例如：<code>ln -s file.txt file_link</code>，创建名为 <code>file_link</code> 的软链接，指向 <code>file.txt</code> 文件。<code>-s</code> 选项代表的就是创建软链接，s 即 symbolic（软链接又名符号链接） 。</p></li><li><p><code>cat/more/less/tail 文件名</code>：文件的查看（查） 。命令 <code>tail -f 文件</code> 可以对某个文件进行动态监控，例如 Tomcat 的日志文件， 会随着程序的运行，日志会变化，可以使用 <code>tail -f catalina-2016-11-11.log</code> 监控 文 件的变化 。</p></li><li><p><code>vim 文件名</code>：修改文件的内容（改）。vim 编辑器是 Linux 中的强大组件，是 vi 编辑器的加强版，vim 编辑器的命令和快捷方式有很多，但此处不一一阐述，大家也无需研究的很透彻，使用 vim 编辑修改文件的方式基本会使用就可以了。在实际开发中，使用 vim 编辑器主要作用就是修改配置文件，下面是一般步骤：<code>vim 文件------&gt;进入文件-----&gt;命令模式------&gt;按i进入编辑模式-----&gt;编辑文件 -------&gt;按Esc进入底行模式-----&gt;输入：wq/q!</code> （输入 wq 代表写入内容并退出，即保存；输入 q!代表强制退出不保存）。</p></li></ul><h2 id="文件压缩" tabindex="-1"><a class="header-anchor" href="#文件压缩"><span>文件压缩</span></a></h2><h3 id="_1-打包并压缩文件" tabindex="-1"><a class="header-anchor" href="#_1-打包并压缩文件"><span>1）打包并压缩文件：</span></a></h3><p>Linux 中的打包文件一般是以 <code>.tar</code> 结尾的，压缩的命令一般是以 <code>.gz</code> 结尾的。而一般情况下打包和压缩是一起进行的，打包并压缩后的文件的后缀名一般 <code>.tar.gz</code>。</p><p>命令：<code>tar -zcvf 打包压缩后的文件名 要打包压缩的文件</code> ，其中：</p><ul><li><p>z：调用 gzip 压缩命令进行压缩</p></li><li><p>c：打包文件</p></li><li><p>v：显示运行过程</p></li><li><p>f：指定文件名</p></li></ul><p>比如：假如 test 目录下有三个文件分别是：<code>aaa.txt</code>、 <code>bbb.txt</code>、<code>ccc.txt</code>，如果我们要打包 <code>test</code> 目录并指定压缩后的压缩包名称为 <code>test.tar.gz</code> 可以使用命令：<code>tar -zcvf test.tar.gz aaa.txt bbb.txt ccc.txt</code> 或 <code>tar -zcvf test.tar.gz /test/</code> 。</p><h3 id="_2-解压压缩包" tabindex="-1"><a class="header-anchor" href="#_2-解压压缩包"><span>2）解压压缩包：</span></a></h3><p>命令：<code>tar [-xvf] 压缩文件</code></p><p>其中 x 代表解压</p><p>示例：</p><ul><li><p>将 <code>/test</code> 下的 <code>test.tar.gz</code> 解压到当前目录下可以使用命令：<code>tar -xvf test.tar.gz</code></p></li><li><p>将 /test 下的 test.tar.gz 解压到根目录/usr 下:<code>tar -xvf test.tar.gz -C /usr</code>（<code>-C</code> 代表指定解压的位置）</p></li></ul><h2 id="文件传输" tabindex="-1"><a class="header-anchor" href="#文件传输"><span>文件传输</span></a></h2><ul><li><p><code>scp [选项] 源文件 远程文件</code> （scp 即 secure copy，安全复制）：用于通过 SSH 协议进行安全的文件传输，可以实现从本地到远程主机的上传和从远程主机到本地的下载。例如：<code>scp -r my_directory user@remote:/home/user</code> ，将本地目录<code>my_directory</code>上传到远程服务器 <code>/home/user</code> 目录下。<code>scp -r user@remote:/home/user/my_directory</code> ，将远程服务器的 <code>/home/user</code> 目录下的<code>my_directory</code>目录下载到本地。需要注意的是，<code>scp</code> 命令需要在本地和远程系统之间建立 SSH 连接进行文件传输，因此需要确保远程服务器已经配置了 SSH 服务，并且具有正确的权限和认证方式。</p></li><li><p><code>rsync [选项] 源文件 远程文件</code> : 可以在本地和远程系统之间高效地进行文件复制，并且能够智能地处理增量复制，节省带宽和时间。例如：<code>rsync -r my_directory user@remote:/home/user</code>，将本地目录<code>my_directory</code>上传到远程服务器 <code>/home/user</code> 目录下。</p></li><li><p><code>ftp</code> (File Transfer Protocol)：提供了一种简单的方式来连接到远程 FTP 服务器并进行文件上传、下载、删除等操作。使用之前需要先连接登录远程 FTP 服务器，进入 FTP 命令行界面后，可以使用 <code>put</code> 命令将本地文件上传到远程主机，可以使用<code>get</code>命令将远程主机的文件下载到本地，可以使用 <code>delete</code> 命令删除远程主机的文件。这里就不进行演示了。</p></li></ul><h2 id="文件权限" tabindex="-1"><a class="header-anchor" href="#文件权限"><span>文件权限</span></a></h2><p>操作系统中每个文件都拥有特定的权限、所属用户和所属组。权限是操作系统用来限制资源访问的机制，在 Linux 中权限一般分为读(readable)、写(writable)和执行(executable)，分为三组。分别对应文件的属主(owner)，属组(group)和其他用户(other)，通过这样的机制来限制哪些用户、哪些组可以对特定的文件进行什么样的操作。</p><p>通过 <strong><code>ls -l</code></strong> 命令我们可以查看某个目录下的文件或目录的权限</p><p><strong>文件的类型：</strong></p><ul><li><p>d：代表目录</p></li><li><p>-：代表文件</p></li><li><p>l：代表软链接（可以认为是 window 中的快捷方式）</p></li></ul><p><strong>Linux 中权限分为以下几种：</strong></p><ul><li><p>r：代表权限是可读，r 也可以用数字 4 表示</p></li><li><p>w：代表权限是可写，w 也可以用数字 2 表示</p></li><li><p>x：代表权限是可执行，x 也可以用数字 1 表示</p></li></ul><p><strong>文件和目录权限的区别：</strong></p><p>对文件和目录而言，读写执行表示不同的意义。</p><p>对于文件：</p><ul><li><p>r 可以使用 cat 查看文件的内容</p></li><li><p>w 可以修改文件的内容</p></li><li><p>x 可以将其运行为二进制文件</p></li></ul><p>对于目录：</p><ul><li><p>r 可以查看目录下列表</p></li><li><p>w 可以创建和删除目录下文件</p></li><li><p>x 可以使用 cd 进入目录</p></li></ul><p>需要注意的是：<strong>超级用户可以无视普通用户的权限，即使文件目录权限是 000，依旧可以访问。</strong></p><p><strong>在 linux 中的每个用户必须属于一个组，不能独立于组外。在 linux 中每个文件有所有者、所在组、其它组的概念。</strong></p><ul><li><p><strong>所有者(u)</strong>：一般为文件的创建者，谁创建了该文件，就天然的成为该文件的所有者，用 <code>ls ‐ahl</code> 命令可以看到文件的所有者 也可以使用 chown 用户名 文件名来修改文件的所有者 。</p></li><li><p><strong>文件所在组(g)</strong>：当某个用户创建了一个文件后，这个文件的所在组就是该用户所在的组用 <code>ls ‐ahl</code>命令可以看到文件的所有组也可以使用 chgrp 组名 文件名来修改文件所在的组。</p></li><li><p><strong>其它组(o)</strong>：除开文件的所有者和所在组的用户外，系统的其它用户都是文件的其它组。</p></li></ul><p><strong>修改文件/目录的权限的命令：<code>chmod</code></strong></p><p>示例：修改/test 下的 aaa.txt 的权限为文件所有者有全部权限，文件所有者所在的组有读写权限，其他用户只有读的权限。</p><p><strong><code>chmod u=rwx,g=rw,o=r aaa.txt</code></strong> 或者 <strong><code>chmod 764 aaa.txt</code></strong></p><p><strong>补充一个比较常用的东西:</strong></p><p>假如我们装了一个 zookeeper，我们每次开机到要求其自动启动该怎么办？</p><ol><li><p>新建一个脚本 zookeeper</p></li><li><p>为新建的脚本 zookeeper 添加可执行权限，命令是:<code>chmod +x zookeeper</code></p></li><li><p>把 zookeeper 这个脚本添加到开机启动项里面，命令是：<code>chkconfig --add zookeeper</code></p></li><li><p>如果想看看是否添加成功，命令是：<code>chkconfig --list</code></p></li></ol><h2 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理"><span>用户管理</span></a></h2><p>Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p><p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p><p><strong>Linux 用户管理相关命令:</strong></p><ul><li><p><code>useradd [选项] 用户名</code>:创建用户账号。使用<code>useradd</code>指令所建立的帐号，实际上是保存在 <code>/etc/passwd</code>文本文件中。</p></li><li><p><code>userdel [选项] 用户名</code>:删除用户帐号。</p></li><li><p><code>usermod [选项] 用户名</code>:修改用户账号的属性和配置比如用户名、用户 ID、家目录。</p></li><li><p><code>passwd [选项] 用户名</code>: 设置用户的认证信息，包括用户密码、密码过期时间等。。例如：<code>passwd -S 用户名</code> ，显示用户账号密码信息。<code>passwd -d 用户名</code>: 清除用户密码，会导致用户无法登录。<code>passwd 用户名</code>，修改用户密码，随后系统会提示输入新密码并确认密码。</p></li><li><p><code>su [选项] 用户名</code>（su 即 Switch User，切换用户）：在当前登录的用户和其他用户之间切换身份。</p></li></ul><h2 id="用户组管理" tabindex="-1"><a class="header-anchor" href="#用户组管理"><span>用户组管理</span></a></h2><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同 Linux 系统对用户组的规定有所不同，如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p><p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对<code>/etc/group</code>文件的更新。</p><p><strong>Linux 系统用户组的管理相关命令:</strong></p><ul><li><p><code>groupadd [选项] 用户组</code> :增加一个新的用户组。</p></li><li><p><code>groupdel 用户组</code>:要删除一个已有的用户组。</p></li><li><p><code>groupmod [选项] 用户组</code> : 修改用户组的属性。</p></li></ul><h2 id="系统状态" tabindex="-1"><a class="header-anchor" href="#系统状态"><span>系统状态</span></a></h2><ul><li><p><code>top [选项]</code>：用于实时查看系统的 CPU 使用率、内存使用率、进程信息等。</p></li><li><p><code>htop [选项]</code>：类似于 <code>top</code>，但提供了更加交互式和友好的界面，可让用户交互式操作，支持颜色主题，可横向或纵向滚动浏览进程列表，并支持鼠标操作。</p></li><li><p><code>uptime [选项]</code>：用于查看系统总共运行了多长时间、系统的平均负载等信息。</p></li><li><p><code>vmstat [间隔时间] [重复次数]</code>：vmstat （Virtual Memory Statistics） 的含义为显示虚拟内存状态，但是它可以报告关于进程、内存、I/O 等系统整体运行状态。</p></li><li><p><code>free [选项]</code>：用于查看系统的内存使用情况，包括已用内存、可用内存、缓冲区和缓存等。</p></li><li><p><code>df [选项] [文件系统]</code>：用于查看系统的磁盘空间使用情况，包括磁盘空间的总量、已使用量和可用量等，可以指定文件系统上。例如：<code>df -a</code>，查看全部文件系统。</p></li><li><p><code>du [选项] [文件]</code>：用于查看指定目录或文件的磁盘空间使用情况，可以指定不同的选项来控制输出格式和单位。</p></li><li><p><code>sar [选项] [时间间隔] [重复次数]</code>：用于收集、报告和分析系统的性能统计信息，包括系统的 CPU 使用、内存使用、磁盘 I/O、网络活动等详细信息。它的特点是可以连续对系统取样，获得大量的取样数据。取样数据和分析的结果都可以存入文件，使用它时消耗的系统资源很小。</p></li><li><p><code>ps [选项]</code>：用于查看系统中的进程信息，包括进程的 ID、状态、资源使用情况等。<code>ps -ef</code>/<code>ps -aux</code>：这两个命令都是查看当前系统正在运行进程，两者的区别是展示格式不同。如果想要查看特定的进程可以使用这样的格式：<code>ps aux|grep redis</code> （查看包括 redis 字符串的进程），也可使用 <code>pgrep redis -a</code>。</p></li><li><p><code>systemctl [命令] [服务名称]</code>：用于管理系统的服务和单元，可以查看系统服务的状态、启动、停止、重启等。</p></li></ul><h2 id="网络通信" tabindex="-1"><a class="header-anchor" href="#网络通信"><span>网络通信</span></a></h2><ul><li><p><code>ping [选项] 目标主机</code>：测试与目标主机的网络连接。</p></li><li><p><code>ifconfig</code> 或 <code>ip</code>：用于查看系统的网络接口信息，包括网络接口的 IP 地址、MAC 地址、状态等。</p></li><li><p><code>netstat [选项]</code>：用于查看系统的网络连接状态和网络统计信息，可以查看当前的网络连接情况、监听端口、网络协议等。</p></li><li><p><code>ss [选项]</code>：比 <code>netstat</code> 更好用，提供了更快速、更详细的网络连接信息。</p></li></ul><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><ul><li><p><code>sudo + 其他命令</code>：以系统管理者的身份执行指令，也就是说，经由 sudo 所执行的指令就好像是 root 亲自执行。</p></li><li><p><code>grep 要搜索的字符串 要搜索的文件 --color</code>：搜索命令，--color 代表高亮显示。</p></li><li><p><code>kill -9 进程的pid</code>：杀死进程（-9 表示强制终止）先用 ps 查找进程，然后用 kill 杀掉。</p></li><li><p><code>shutdown</code>：<code>shutdown -h now</code>：指定现在立即关机；<code>shutdown +5 &quot;System will shutdown after 5 minutes&quot;</code>：指定 5 分钟后关机，同时送出警告信息给登入用户。</p></li><li><p><code>reboot</code>：<code>reboot</code>：重开机。<code>reboot -w</code>：做个重开机的模拟（只有纪录并不会真的重开机）。</p></li></ul>',57);function n(a,s){return t(),c("div",null,[p,d("more"),r])}const g=o(i,[["render",n],["__file","Linux常用命令.html.vue"]]),m=JSON.parse(`{"path":"/%E6%96%87%E7%AB%A0/%E6%8A%80%E6%9C%AF%E6%95%B4%E7%90%86/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html","title":"「Linux常用命令」","lang":"zh-CN","frontmatter":{"title":"「Linux常用命令」","author":"Jogs","date":"2024-10-13T00:00:00.000Z","category":["技术"],"tag":["Linux"],"editLink":false,"description":"来自 gpt 的摘要： 这篇文章系统介绍了Linux操作系统中与目录、文件、用户管理、系统状态和网络通信相关的常用命令及其用法。内容涵盖目录切换与操作、文件的创建、查看、修改与删除，以及文件压缩与传输。文章还涉及权限管理、用户和用户组的增删改、服务管理及进程控制。同时，它讲解了系统资源监控、内存与磁盘使用查看、网络连接测试等实用工具。整体内容侧重于命令...","head":[["meta",{"property":"og:url","content":"https://jogs-abc.github.io/%E6%96%87%E7%AB%A0/%E6%8A%80%E6%9C%AF%E6%95%B4%E7%90%86/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"Jogs' blog"}],["meta",{"property":"og:title","content":"「Linux常用命令」"}],["meta",{"property":"og:description","content":"来自 gpt 的摘要： 这篇文章系统介绍了Linux操作系统中与目录、文件、用户管理、系统状态和网络通信相关的常用命令及其用法。内容涵盖目录切换与操作、文件的创建、查看、修改与删除，以及文件压缩与传输。文章还涉及权限管理、用户和用户组的增删改、服务管理及进程控制。同时，它讲解了系统资源监控、内存与磁盘使用查看、网络连接测试等实用工具。整体内容侧重于命令..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Jogs"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2024-10-13T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"「Linux常用命令」\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-13T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jogs\\"}]}"]]},"headers":[{"level":2,"title":"目录切换","slug":"目录切换","link":"#目录切换","children":[]},{"level":2,"title":"目录操作","slug":"目录操作","link":"#目录操作","children":[]},{"level":2,"title":"文件操作","slug":"文件操作","link":"#文件操作","children":[]},{"level":2,"title":"文件压缩","slug":"文件压缩","link":"#文件压缩","children":[{"level":3,"title":"1）打包并压缩文件：","slug":"_1-打包并压缩文件","link":"#_1-打包并压缩文件","children":[]},{"level":3,"title":"2）解压压缩包：","slug":"_2-解压压缩包","link":"#_2-解压压缩包","children":[]}]},{"level":2,"title":"文件传输","slug":"文件传输","link":"#文件传输","children":[]},{"level":2,"title":"文件权限","slug":"文件权限","link":"#文件权限","children":[]},{"level":2,"title":"用户管理","slug":"用户管理","link":"#用户管理","children":[]},{"level":2,"title":"用户组管理","slug":"用户组管理","link":"#用户组管理","children":[]},{"level":2,"title":"系统状态","slug":"系统状态","link":"#系统状态","children":[]},{"level":2,"title":"网络通信","slug":"网络通信","link":"#网络通信","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}],"git":{},"readingTime":{"minutes":13.2,"words":3959},"filePathRelative":"文章/技术整理/Linux常用命令.md","localizedDate":"2024年10月13日","excerpt":"<blockquote>\\n<p>来自 gpt 的摘要：\\n这篇文章系统介绍了Linux操作系统中与目录、文件、用户管理、系统状态和网络通信相关的常用命令及其用法。内容涵盖目录切换与操作、文件的创建、查看、修改与删除，以及文件压缩与传输。文章还涉及权限管理、用户和用户组的增删改、服务管理及进程控制。同时，它讲解了系统资源监控、内存与磁盘使用查看、网络连接测试等实用工具。整体内容侧重于命令的功能说明与实际示例，适用于初学者熟悉Linux日常操作和管理任务。</p>\\n</blockquote>\\n<!--more-->\\n<h2>目录切换</h2>\\n<ul>\\n<li>\\n<p><code>cd usr</code>：切换到该目录下 usr 目录</p>\\n</li>\\n<li>\\n<p><code>cd ..（或cd../）</code>：切换到上一层目录</p>\\n</li>\\n<li>\\n<p><code>cd /</code>：切换到系统根目录</p>\\n</li>\\n<li>\\n<p><code>cd ~</code>：切换到用户主目录</p>\\n</li>\\n<li>\\n<p><strong><code>cd -</code>：</strong>&nbsp;切换到上一个操作所在目录</p>\\n</li>\\n</ul>","autoDesc":true}`);export{g as comp,m as data};
