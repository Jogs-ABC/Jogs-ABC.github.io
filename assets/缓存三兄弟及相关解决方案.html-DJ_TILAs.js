import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,d as e,a as i,o as s}from"./app-3slBDSzW.js";const r={},n=e("blockquote",null,[e("p",null,"来自 gpt 的摘要： 本文为你提供了一个简明易懂的指南，介绍了缓存雪崩、缓存穿透和缓存击穿三种常见问题及其解决方案，帮助你提升系统的稳定性和可靠性。缓存雪崩指的是大量缓存数据同时失效，导致数据库压力骤增，解决方案包括使用 Redis 集群、多级缓存和设置随机失效时间等。缓存穿透是由于大量不存在于缓存和数据库的请求直接打到数据库上，可通过参数校验、布隆过滤器和接口限流来防范。缓存击穿则是热点数据过期引发的高并发请求，建议通过缓存预热、互斥锁等方式缓解。为了避免服务不可用，文中还介绍了缓存降级策略，保证在高并发或服务故障时，系统仍能提供核心功能。详细操作步骤请参考文中内容，有疑问欢迎讨论。")],-1),o=i('<h2 id="一、缓存雪崩" tabindex="-1"><a class="header-anchor" href="#一、缓存雪崩"><span>一、缓存雪崩</span></a></h2><h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h3><p>缓存雪崩可以理解为：<strong>同一时间</strong>缓存中的<strong>大面积</strong>数据失效，导致大量请求直接打在数据库，对数据库 CPU 和内存造成巨大压力，严重的会造成数据库宕机。一般导致缓存雪崩现象有两个原因：1）缓存服务宕机，2）缓存数据大面积同时过期。</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h3><h4 id="针对缓存服务不可用" tabindex="-1"><a class="header-anchor" href="#针对缓存服务不可用"><span>针对缓存服务不可用</span></a></h4><ul><li><ol><li><em>Redis 集群</em>：通过 Redis 集群避免单机服务失效。</li></ol></li><li><ol start="2"><li>多级缓存：设置多级缓存，例如本地缓存 + Redis 缓存的二级缓存组合，当 Redis 缓存出现问题时，还可以从本地缓存中获取到部分数据。</li></ol></li><li><ol start="3"><li><em>缓存降级</em>：当遇见即将到来的数据压力时，通过缓存降级，防止 Redis 服务故障，导致数据库跟着一起发生雪崩问题。</li></ol></li></ul><h4 id="针对缓存数据大面积同时过期" tabindex="-1"><a class="header-anchor" href="#针对缓存数据大面积同时过期"><span>针对缓存数据大面积同时过期</span></a></h4><ul><li><ol><li>对数据库操作加互斥锁或队列：保证不会有大量线程对数据库同时进行读写，避免数据库受到巨大压力。</li></ol></li><li><ol start="2"><li>设置随机失效时间：为缓存设置随机的失效时间，例如在固定过期时间的基础上加上一个随机值，这样可以避免大量缓存同时到期，从而减少缓存雪崩的风险。</li></ol></li><li><ol start="3"><li><em>缓存预热</em>：针对热点数据提前预热，将其存入缓存中并设置合理的过期时间，比如秒杀场景下的数据在秒杀结束之前不过期。</li></ol></li><li><ol start="4"><li>持久缓存策略（看情况）：虽然一般不推荐设置缓存永不过期，但对于某些关键性和变化不频繁的数据，可以考虑这种策略。</li></ol></li></ul><h2 id="二、缓存穿透" tabindex="-1"><a class="header-anchor" href="#二、缓存穿透"><span>二、缓存穿透</span></a></h2><h3 id="场景-1" tabindex="-1"><a class="header-anchor" href="#场景-1"><span>场景</span></a></h3><p>缓存穿透可以理解为：<strong>大量不存在</strong>于数据库和缓存的 key 请求，导致这些大量请求都直接打到了数据库上，并<strong>没有经过缓存</strong>，对数据库 CPU 和内存造成巨大压力，严重的会造成数据库宕机。一般这种情况是遭受了黑客攻击，有两种攻击方式：1）单 key 攻击，2）多 key 攻击</p><h3 id="解决方案-1" tabindex="-1"><a class="header-anchor" href="#解决方案-1"><span>解决方案</span></a></h3><ul><li><ol><li>参数校验：做好后端服务的参数校验，一些不合法的参数请求直接抛出异常信息返回给客户端。</li></ol></li><li><ol start="2"><li>缓存无效 key（对情况 2 效果较差）：如果缓存和数据库都查不到某个 key 的数据就写一个到 Redis 中去并设置过期时间，具体命令如下：<code>SET key value EX 10086</code> 。这种方式可以解决请求的 key 变化不频繁的情况，如果黑客恶意攻击，每次构建不同的请求 key，会导致 Redis 中缓存大量无效的 key 。很明显，这种方案并不能从根本上解决此问题。如果非要用这种方式来解决穿透问题的话，尽量将无效的 key 的过期时间设置短一点，比如 1 分钟。</li></ol></li><li><ol start="3"><li><em>布隆过滤器</em>（推荐）：把所有可能存在的请求的值都存放在布隆过滤器中，当用户请求过来，先判断用户发来的请求的值是否存在于布隆过滤器中。不存在的话，直接返回请求参数错误信息给客户端，存在的话才会继续流程。</li></ol></li><li><ol start="4"><li>接口<em>限流</em>：根据用户或者 IP 对接口进行限流，对于异常频繁的访问行为，还可以采取黑名单机制，例如将异常 IP 列入黑名单。（缓存击穿和雪崩都可以配合接口限流来解决）</li></ol></li></ul><h2 id="三、缓存击穿" tabindex="-1"><a class="header-anchor" href="#三、缓存击穿"><span>三、缓存击穿</span></a></h2><h3 id="场景-2" tabindex="-1"><a class="header-anchor" href="#场景-2"><span>场景</span></a></h3><p>缓存击穿可以理解为：正在接受大量请求的一个热点数据刚好在缓存过期，导致这就可能会导致瞬时大量的请求直接打到了数据库上，对数据库 CPU 和内存造成巨大压力，严重的会造成数据库宕机。</p><h3 id="解决方案-2" tabindex="-1"><a class="header-anchor" href="#解决方案-2"><span>解决方案</span></a></h3><ul><li><ol><li>永不过期（不推荐）：设置热点数据永不过期或者过期时间比较长。</li></ol></li><li><ol start="2"><li><em>缓存预热</em>：针对热点数据提前预热，将其存入缓存中并设置合理的过期时间，比如秒杀场景下的数据在秒杀结束之前不过期。</li></ol></li><li><ol start="3"><li>对数据库操作加互斥锁或队列：保证不会有大量线程对数据库同时进行读写，避免数据库受到巨大压力。</li></ol></li></ul><h2 id="四、复杂方案的具体实现" tabindex="-1"><a class="header-anchor" href="#四、复杂方案的具体实现"><span>四、复杂方案的具体实现</span></a></h2><h3 id="redis-集群" tabindex="-1"><a class="header-anchor" href="#redis-集群"><span>Redis 集群</span></a></h3><p>方案较复杂，后期更新。</p><h3 id="缓存降级" tabindex="-1"><a class="header-anchor" href="#缓存降级"><span>缓存降级</span></a></h3><p>当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。降级的最终目的是保证核心服务可用，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。 可以参考日志级别设置预案：（1）一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；（2）警告：有些服务在一段时间内成功率有波动（如在 95~100%之间），可以自动降级或人工降级，并发送告警；（3）错误：比如可用率低于 90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；（4）严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。 服务降级的目的，是为了防止 Redis 服务故障，导致数据库跟着一起发生雪崩问题。因此，对于不重要的缓存数据，可以采取服务降级策略，例如一个比较常见的做法就是，Redis 出现问题，不去数据库查询，而是直接返回默认值给用户。</p><h3 id="缓存预热" tabindex="-1"><a class="header-anchor" href="#缓存预热"><span>缓存预热</span></a></h3><ul><li><ol><li>使用定时任务，比如 xxl-job，来定时触发缓存预热的逻辑，将数据库中的热点数据查询出来并存入缓存中。</li></ol></li><li><ol start="2"><li>使用消息队列，比如 Kafka，来异步地进行缓存预热，将数据库中的热点数据的主键或者 ID 发送到消息队列中，然后由缓存服务消费消息队列中的数据，根据主键或者 ID 查询数据库并更新缓存。</li></ol></li></ul><h3 id="布隆过滤器" tabindex="-1"><a class="header-anchor" href="#布隆过滤器"><span>布隆过滤器</span></a></h3><p><a href="https://javaguide.cn/cs-basics/data-structure/bloom-filter.html" target="_blank" rel="noopener noreferrer">不了解布隆过滤器？一文给你整的明明白白！</a>。</p><h3 id="服务限流" tabindex="-1"><a class="header-anchor" href="#服务限流"><span>服务限流</span></a></h3><p><a href="https://javaguide.cn/high-availability/limit-request.html" target="_blank" rel="noopener noreferrer">服务限流详解</a></p><h2 id="五、相关问题" tabindex="-1"><a class="header-anchor" href="#五、相关问题"><span>五、相关问题</span></a></h2><h3 id="缓存雪崩和缓存击穿有什么区别" tabindex="-1"><a class="header-anchor" href="#缓存雪崩和缓存击穿有什么区别"><span>缓存雪崩和缓存击穿有什么区别？</span></a></h3><p>缓存雪崩和缓存击穿比较像，但导致缓存雪崩的原因是缓存中的大量数据失效，缓存击穿导致的原因主要是某个热点数据不存在与缓存中（通常是因为缓存中的那份数据已经过期）。</p>',32);function h(d,c){return s(),a("div",null,[n,t("more"),o])}const m=l(r,[["render",h],["__file","缓存三兄弟及相关解决方案.html.vue"]]),u=JSON.parse(`{"path":"/%E6%96%87%E7%AB%A0/%E6%8A%80%E6%9C%AF/%E7%BC%93%E5%AD%98%E4%B8%89%E5%85%84%E5%BC%9F%E5%8F%8A%E7%9B%B8%E5%85%B3%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","title":"缓存三兄弟及解决相关方案","lang":"zh-CN","frontmatter":{"title":"缓存三兄弟及解决相关方案","icon":"pencil","author":"Jogs","date":"2024-09-13T00:00:00.000Z","isOriginal":true,"cover":"/assets/images/programmer-1653351_640.jpg","category":["技术"],"tag":["Redis"],"editLink":false,"description":"来自 gpt 的摘要： 本文为你提供了一个简明易懂的指南，介绍了缓存雪崩、缓存穿透和缓存击穿三种常见问题及其解决方案，帮助你提升系统的稳定性和可靠性。缓存雪崩指的是大量缓存数据同时失效，导致数据库压力骤增，解决方案包括使用 Redis 集群、多级缓存和设置随机失效时间等。缓存穿透是由于大量不存在于缓存和数据库的请求直接打到数据库上，可通过参数校验、布隆...","head":[["meta",{"property":"og:url","content":"https://jogs-abc.github.io/%E6%96%87%E7%AB%A0/%E6%8A%80%E6%9C%AF/%E7%BC%93%E5%AD%98%E4%B8%89%E5%85%84%E5%BC%9F%E5%8F%8A%E7%9B%B8%E5%85%B3%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"Jogs's blog"}],["meta",{"property":"og:title","content":"缓存三兄弟及解决相关方案"}],["meta",{"property":"og:description","content":"来自 gpt 的摘要： 本文为你提供了一个简明易懂的指南，介绍了缓存雪崩、缓存穿透和缓存击穿三种常见问题及其解决方案，帮助你提升系统的稳定性和可靠性。缓存雪崩指的是大量缓存数据同时失效，导致数据库压力骤增，解决方案包括使用 Redis 集群、多级缓存和设置随机失效时间等。缓存穿透是由于大量不存在于缓存和数据库的请求直接打到数据库上，可通过参数校验、布隆..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://jogs-abc.github.io/assets/images/programmer-1653351_640.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://jogs-abc.github.io/assets/images/programmer-1653351_640.jpg"}],["meta",{"name":"twitter:image:alt","content":"缓存三兄弟及解决相关方案"}],["meta",{"property":"article:author","content":"Jogs"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2024-09-13T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"缓存三兄弟及解决相关方案\\",\\"image\\":[\\"https://jogs-abc.github.io/assets/images/programmer-1653351_640.jpg\\"],\\"datePublished\\":\\"2024-09-13T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jogs\\"}]}"]]},"headers":[{"level":2,"title":"一、缓存雪崩","slug":"一、缓存雪崩","link":"#一、缓存雪崩","children":[{"level":3,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":3,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]},{"level":2,"title":"二、缓存穿透","slug":"二、缓存穿透","link":"#二、缓存穿透","children":[{"level":3,"title":"场景","slug":"场景-1","link":"#场景-1","children":[]},{"level":3,"title":"解决方案","slug":"解决方案-1","link":"#解决方案-1","children":[]}]},{"level":2,"title":"三、缓存击穿","slug":"三、缓存击穿","link":"#三、缓存击穿","children":[{"level":3,"title":"场景","slug":"场景-2","link":"#场景-2","children":[]},{"level":3,"title":"解决方案","slug":"解决方案-2","link":"#解决方案-2","children":[]}]},{"level":2,"title":"四、复杂方案的具体实现","slug":"四、复杂方案的具体实现","link":"#四、复杂方案的具体实现","children":[{"level":3,"title":"Redis 集群","slug":"redis-集群","link":"#redis-集群","children":[]},{"level":3,"title":"缓存降级","slug":"缓存降级","link":"#缓存降级","children":[]},{"level":3,"title":"缓存预热","slug":"缓存预热","link":"#缓存预热","children":[]},{"level":3,"title":"布隆过滤器","slug":"布隆过滤器","link":"#布隆过滤器","children":[]},{"level":3,"title":"服务限流","slug":"服务限流","link":"#服务限流","children":[]}]},{"level":2,"title":"五、相关问题","slug":"五、相关问题","link":"#五、相关问题","children":[{"level":3,"title":"缓存雪崩和缓存击穿有什么区别？","slug":"缓存雪崩和缓存击穿有什么区别","link":"#缓存雪崩和缓存击穿有什么区别","children":[]}]}],"git":{},"readingTime":{"minutes":7.14,"words":2142},"filePathRelative":"文章/技术/缓存三兄弟及相关解决方案.md","localizedDate":"2024年9月13日","excerpt":"<blockquote>\\n<p>来自 gpt 的摘要：\\n本文为你提供了一个简明易懂的指南，介绍了缓存雪崩、缓存穿透和缓存击穿三种常见问题及其解决方案，帮助你提升系统的稳定性和可靠性。缓存雪崩指的是大量缓存数据同时失效，导致数据库压力骤增，解决方案包括使用 Redis 集群、多级缓存和设置随机失效时间等。缓存穿透是由于大量不存在于缓存和数据库的请求直接打到数据库上，可通过参数校验、布隆过滤器和接口限流来防范。缓存击穿则是热点数据过期引发的高并发请求，建议通过缓存预热、互斥锁等方式缓解。为了避免服务不可用，文中还介绍了缓存降级策略，保证在高并发或服务故障时，系统仍能提供核心功能。详细操作步骤请参考文中内容，有疑问欢迎讨论。</p>\\n</blockquote>","autoDesc":true}`);export{m as comp,u as data};
